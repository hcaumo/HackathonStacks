import { Account, Wallet } from './common';
import { GaiaHubConfig } from '@stacks/storage';
import { FetchFn } from '@stacks/network';
export interface ConfigApp {
    origin: string;
    scopes: string[];
    lastLoginAt: number;
    appIcon: string;
    name: string;
}
export interface ConfigAccount {
    username?: string;
    apps: {
        [origin: string]: ConfigApp;
    };
}
export interface WalletConfig {
    accounts: ConfigAccount[];
    meta?: {
        [key: string]: any;
    };
}
export declare const createWalletGaiaConfig: ({ gaiaHubUrl, wallet, }: {
    gaiaHubUrl: string;
    wallet: Wallet;
}) => Promise<GaiaHubConfig>;
export declare const getOrCreateWalletConfig: ({ wallet, gaiaHubConfig, skipUpload, fetchFn, }: {
    wallet: Wallet;
    gaiaHubConfig: GaiaHubConfig;
    skipUpload?: boolean | undefined;
    fetchFn?: FetchFn | undefined;
}) => Promise<WalletConfig>;
export declare const fetchWalletConfig: ({ wallet, gaiaHubConfig, fetchFn, }: {
    wallet: Wallet;
    gaiaHubConfig: GaiaHubConfig;
    fetchFn?: FetchFn | undefined;
}) => Promise<WalletConfig | null>;
export declare const updateWalletConfig: ({ wallet, walletConfig: _walletConfig, gaiaHubConfig, }: {
    wallet: Wallet;
    walletConfig?: WalletConfig | undefined;
    gaiaHubConfig: GaiaHubConfig;
}) => Promise<WalletConfig>;
export declare function makeWalletConfig(wallet: Wallet): WalletConfig;
export declare const encryptWalletConfig: ({ wallet, walletConfig, }: {
    wallet: Wallet;
    walletConfig: WalletConfig;
}) => Promise<string>;
export declare const updateWalletConfigWithApp: ({ wallet, account, app, gaiaHubConfig, walletConfig, }: {
    wallet: Wallet;
    account: Account;
    app: ConfigApp;
    gaiaHubConfig: GaiaHubConfig;
    walletConfig: WalletConfig;
}) => Promise<WalletConfig>;
